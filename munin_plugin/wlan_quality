#!/bin/bash
################################
# Author: Rum Coke
# Data  : 2015/05/19
<<<<<<< HEAD
# Ver   : 0.9.3
=======
# Ver   : 0.9.2
>>>>>>> 0a799b739d79508706186a1a01be74c189501892
################################
# Set ESSID
function SetEssid()
{
	ArrayResult=(`/sbin/iwlist wlan0 scan | egrep -o '(Quality=[[:digit:]]{1,3}\/[[:digit:]]{2,3}|ESSID:.*)'`)
}

# Check Signals.
function CheckSignals()
{
	I=0
	if [ `echo ${ArrayResult[0]} | egrep '^ESSID:'` ]
	then
		while (( Z < ${#ArrayResult[@]} ))
		do
			if [ ! `echo ${ArrayResult[$Z]} | egrep '(\x00)+'` ] && [ `echo ${ArrayResult[$Z]} | sed -r 's/(ESSID:|")//g'` ]
			then
				LABEL[$I]=`echo ${ArrayResult[$Z]} | sed -r 's/(ESSID:|")//g'`
				SIGNAL[$I]=`echo ${ArrayResult[$(($Z+1))]} | sed -r 's/(Quality=|\/[[:digit:]]{2,3})//g'`
				I=$(($I+1))
			fi
			Z=$(($Z+2))
		done

	else
		while (( Z < ${#ArrayResult[@]} ))
		do
<<<<<<< HEAD
			if [ ! `echo ${ArrayResult[$((Z+1))]} | egrep '(\x00)+'` ]
=======
			if [ ! `echo ${ArrayResult[$(($Z+1))]} | egrep '(\x00)+'` ]
>>>>>>> 0a799b739d79508706186a1a01be74c189501892
			then
				LABEL[$I]=`echo ${ArrayResult[$(($Z+1))]} | sed -r 's/(ESSID:|")//g'`
				SIGNAL[$I]=`echo ${ArrayResult[$Z]} | sed -r 's/(Quality=|\/[[:digit:]]{2,3})//g'`
				I=$(($I+1))
			fi
			Z=$(($Z+2))
		done
	fi
}

################################
# Main Function
################################
# Locale Setting.
LANG=C

# Warn and Critical.
WARN_SIG='30.0:'
CRITICAL_SIG='10.0:'

# Exec iwlist.
SetEssid

# Signal Check.
CheckSignals

if [ "$1" = "autoconf" ]; then
	echo yes
       	exit 0
fi

if [ "$1" = "config" ]; then
	# Glaph Common
	echo 'graph_title Wi-Fi signal strength'
	echo 'graph_args --base 1000 -l 0'
	echo 'graph_vlabel Signal Quality'
	echo 'graph_category network'
	echo 'graph_scale yes'
	echo 'graph_printf %6.2lf'

	# Set Info.
	for (( Z = 0; Z < ${#LABEL[@]}; ++Z ))
	do
		echo "${LABEL[$Z]}.label ${LABEL[$Z]}"
		echo "${LABEL[$Z]}.draw LINE1"
		echo "${LABEL[$Z]}.warning ${WARN_SIG}"
		echo "${LABEL[$Z]}.critical ${CRITICAL_SIG}"
		echo "${LABEL[$Z]}.info Signal Strength"
	done

	exit 0
fi

for (( Z = 0; Z < ${#LABEL[@]}; ++Z ))
do
	echo "${LABEL[$Z]}.value ${SIGNAL[$Z]}"
done

